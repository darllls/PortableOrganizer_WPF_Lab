// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Organizer.UI;

#nullable disable

namespace Organizer.UI.Migrations
{
    [DbContext(typeof(OrganizerDbContext))]
    partial class OrganizerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Organizer.UI.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Name = "Customer1",
                            OrderNumber = 1001,
                            Phone = "123456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            Name = "Customer2",
                            OrderNumber = 1002,
                            Phone = "987654321"
                        },
                        new
                        {
                            CustomerId = 3,
                            Name = "Customer3",
                            OrderNumber = 1003,
                            Phone = "111223344"
                        },
                        new
                        {
                            CustomerId = 4,
                            Name = "Customer4",
                            OrderNumber = 1004,
                            Phone = "555666777"
                        },
                        new
                        {
                            CustomerId = 5,
                            Name = "Customer5",
                            OrderNumber = 1005,
                            Phone = "999888777"
                        });
                });

            modelBuilder.Entity("Organizer.UI.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("INT");

                    b.HasKey("OrderId");

                    b.ToTable("Orders", (string)null);

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            Date = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Number = 1001,
                            Status = 0
                        },
                        new
                        {
                            OrderId = 2,
                            Date = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Number = 1002,
                            Status = 0
                        },
                        new
                        {
                            OrderId = 3,
                            Date = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Number = 1003,
                            Status = 0
                        },
                        new
                        {
                            OrderId = 4,
                            Date = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Number = 1004,
                            Status = 0
                        },
                        new
                        {
                            OrderId = 5,
                            Date = new DateTime(2023, 11, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            Number = 1005,
                            Status = 0
                        });
                });

            modelBuilder.Entity("Organizer.UI.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers", (string)null);

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Email = "supplier1@example.com",
                            Name = "Supplier1"
                        },
                        new
                        {
                            SupplierId = 2,
                            Email = "supplier2@example.com",
                            Name = "Supplier2"
                        },
                        new
                        {
                            SupplierId = 3,
                            Email = "supplier3@example.com",
                            Name = "Supplier3"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
